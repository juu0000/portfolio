apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: aws-s3-template
  title: Create a AWS S3
  description: AWS S3 버킷을 생성해주는 템플릿 입니다.
  tags:
    - aws
    - s3
spec:
  owner: team-devops
  system: lhj-idp
  type: aws

  parameters:
    - title: 새 AWS S3에 대한 정보를 입력해주세요.
      required:
        - s3Name
        - acl
        - tags
      properties:
        s3Name:
          title: S3 Name
          type: string
          description: S3 버킷 이름을 입력합니다.
        description:
          title: Description
          type: string
          description: S3 버킷 설명을 입력합니다.
        acl:
          title: S3 ACL
          type: string
          description: S3 버킷 접근 제어 권한을 입력합니다.
          enum:
            - private
            - public-read
            - public-read-write
            - aws-exec-read
            - authenticated-read
        tags:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - User
        environment:
          title: Environment
          description: 생성할 환경을 선택합니다.
          type: array
          default: dev
          minItems: 1
          items:
            type: string
            enum:
              - dev
              - prod
          uniqueItems: true
          ui:widget: checkboxes

  steps:
    - id: fetch-vars
      name: Fetch S3 terraform variables
      action: fetch:plain
      input:
        url: https://github.com/juu0000/portfolio/blob/develop/iac/terraform/s3/env
        targetPath: iac/terraform/s3/env

    - id: merge-vars
      name: Merge S3 terraform variables
      if: ${{ parameters.environment.includes('dev') }}
      action: roadiehq:utils:merge
      options:
        mergeArrays: true
      input:
        path: iac/terraform/s3/env/dev.yaml
        mergeArrays: true
        content:
          buckets:
            - name: ${{ parameters.s3Name }}
              acl: ${{ parameters.acl }}
              tags:
                Owner: ${{ parameters.tags }}

    - id: merge-vars-prod
      name: Merge S3 terraform variables
      if: ${{ parameters.environment.includes('prod') }}
      action: roadiehq:utils:merge
      options:
        mergeArrays: true
      input:
        path: iac/terraform/s3/env/prod.yaml
        mergeArrays: true
        content:
          buckets:
            - name: ${{ parameters.s3Name }}
              acl: ${{ parameters.acl }}
              tags:
                Owner: ${{ parameters.tags }}

    - id: catalogTemplate
      name: Generating the Catalog Info Component
      action: fetch:template
      input:
        url: ../../skeletons/catalog-entities/resource/
        values:
          name: ${{ parameters.s3Name }}
          type: s3
          owner: ${{ parameters.tags }}
          system: aws-s3
          description: ${{ parameters.description }}
        targetPath: catalog-entities/resources/

    - id: gitopsPullrequest
      name: GitOps PullRequest
      action: publish:github:pull-request
      input:
        repoUrl: github.com?owner=juu0000&repo=portfolio
        branchName: infra
        title: Create Terraform files
        description: 새로운 S3 버킷을 위한 Terraform 코드를 생성합니다.

  output:
    links:
      - title: Open the GitOps Repository
        url: ${{ steps.gitopsPullrequest.output.remoteUrl }}
