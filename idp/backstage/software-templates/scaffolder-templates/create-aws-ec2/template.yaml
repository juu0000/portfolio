apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: aws-ec2-template
  title: Create a AWS EC2
  description: AWS EC2 인스턴스를 생성해주는 템플릿 입니다.
  tags:
    - aws
    - ec2
spec:
  owner: team-devops
  system: lhj-idp
  type: aws

  parameters:
    - title: 새로 만들 AWS EC2에 대한 정보를 입력해주세요.
      required:
        - ec2Name
        - instanceType
        - tags
      properties:
        ec2Name:
          title: EC2 Name
          type: string
          description: EC2 인스턴스 이름을 입력합니다.
        description:
          title: Description
          type: string
          description: EC2 인스턴스 설명을 입력합니다.
        instanceType:
          title: Instance Type
          description: EC2 인스턴스 유형을 입력합니다.
          type: string
          default: t2.micro
          enum:
            - t2.micro
            - t3.small
          enumNames:
            - '가장 낮은 성능 t2.micro'
            - '중간 성능 t3.small'
        tags:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - User
        environment:
          title: Environment
          description: 생성할 환경을 선택합니다.
          type: string
          default: dev
          enum:
            - dev
            - prod
          uniqueItems: true
          ui:widget: radio

  steps:
    - id: fetch-vars
      name: Fetch S3 terraform variables
      action: fetch:plain
      input:
        url: https://github.com/juu0000/portfolio/blob/develop/iac/terraform/ec2/env
        targetPath: iac/terraform/ec2/env

    - id: merge-vars-dev
      name: Merge EC2 terraform variables for dev
      if: ${{ parameters.environment.includes('dev') }}
      action: roadiehq:utils:merge
      options:
        mergeArrays: true
      input:
        path: iac/terraform/ec2/env/dev.yaml
        mergeArrays: true
        content:
          ec2_instances:
            - name: ${{ parameters.ec2Name }}
              instance_type: ${{ parameters.instanceType }}
              key_name: ${{ parameters.ec2Name }}-key
              monitoring: false
              vpc_security_group_ids:
                - sg-12345678
              subnet_id: subnet-eddcdzz4
              tags:
                Owner: ${{ parameters.tags }}

    - id: merge-vars-prod
      name: Merge EC2 terraform variables for prod
      if: ${{ parameters.environment.includes('prod') }}
      action: roadiehq:utils:merge
      options:
        mergeArrays: true
      input:
        path: iac/terraform/ec2/env/prod.yaml
        mergeArrays: true
        content:
          ec2_instances:
            - name: ${{ parameters.ec2Name }}
              instance_type: ${{ parameters.instanceType }}
              key_name: ${{ parameters.ec2Name }}
              monitoring: false
              vpc_security_group_ids:
                - sg-87654321
              subnet_id: subnet-xyzabcd
              tags:
                Owner: ${{ parameters.tags }}

    - id: catalogTemplate
      name: Generating the Catalog Info Component
      action: fetch:template
      input:
        url: ../../skeletons/catalog-entities/resource/
        values:
          name: ${{ parameters.ec2Name }}
          type: ec2
          owner: ${{ parameters.tags }}
          system: aws-ec2
          description: ${{ parameters.description }}
        targetPath: catalog-entities/resources/

    - id: gitopsPullrequest
      name: GitOps PullRequest
      action: publish:github:pull-request
      input:
        repoUrl: github.com?owner=juu0000&repo=portfolio
        branchName: infra
        title: Create Terraform files
        description: 새로운 EC2 인스턴스를 생성하기 위한 Terraform 코드를 생성합니다.

  output:
    links:
      - title: Open the GitOps Repository
        url: ${{ steps.gitopsPullrequest.output.remoteUrl }}
